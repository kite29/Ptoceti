{"name":"Ptoceti","tagline":"IoT hub","body":"Ptoceti : an embedable Obix server\r\n==================================================\r\n\r\nPtoceti is a set of Osgi bundles to build a [Obix]( http://www.obix.org/) server.\r\n\r\nPtoceti is build on top of [Osgi](www.osgi.org) R4 and and execute in a jdk 1.7. It needs about 20-30 mb of memory to execute which make it a nice fit for a small form factor Arm computer.\r\n\r\nThe architecture of the server rest on a consumer / producer pattern so that you can easely provide your own to data to be exposed through your own bundles.\r\nAdditionally an embedded [SQLite](http://sqlite.org) database is used to record data and serves it through a SPA Javascript style client for interaction in mobile and tablet devices.\r\n\r\n \r\n## Ptoceti's modules\r\n\r\nPtoceti's main modules are:\r\n\r\n- com.ptoceti.osgi.obix.backbones : the single page web application to serve obix content.\r\n\r\n- com.ptoceti.osgi.obix : the obix server itself, splitted into two modules, api and impl\r\n\r\n- com.ptoceti.osgi.sqlite : the database used by the server\r\n\r\n- com.ptoceti.osgi.wireadmin : the messaging system responsible for transiting messages between producer and consumer ( the server and other data provider )\r\n\r\n- com.ptoceti.osgi.modbus : a set of two bundles ( modbus and modbusdevice ) capable to connect to a modbus link ( Rs-485 ) and present data to the wire handler.\r\n\r\n- com.ptoceti.osgi.pi : a bundle capable to produce data from inside a raspberry Pi; Make use of the [Pi4j project](https://github.com/Pi4J/pi4j/).\r\n\r\n\r\n## Compatibility and requirements\r\n\r\nCurrently, Ptoceti need the following modules:\r\n- rxtxcomm-API 2.1.7\r\n- kxml-LIB 2.3.0\r\n- pax-web-extender-whiteboard 1.0.12\r\n- restlet 2.0.5\r\n- guice 2.0\r\n- sqlite-jdbc 3.7.15\r\n- jackson 2.2\r\n\r\njre or jdk : 1.7\r\n\r\n\r\nTo run, it will need an implementation of Osgi R4. I made it execute on a patch of [Felix](/felix.apache.org) and [Knopflerfish](http://www.knopflerfish.org/) bundles.\r\nIt will also need an implementation of Osgi Http server that can be provided by  [Pax Web](https://github.com/ops4j/org.ops4j.pax.web) (Jetty or Apache Tomcat)\r\n \r\n##Getting started\r\n\r\n### Build from sources\r\n\r\nYou'll need maven 3.x installed for compiling and packaging the bundles. For building the UX project ( com.ptoceti.osgi.obix.backbones ), you'll need node.js, npm and Grunt installed as well.\r\nAssure that everything is available from the current path and under the shell simply enter\r\n\r\n```\r\nmaven clean install\r\n```\r\n\r\n### Launch\r\nIf you want to execute the freshly build bundles for debugging or testing, you can launch a full setup using the include maven-pax-plugin by isuing the command:\r\n\r\n```\r\nmaven pax:run\r\n```\r\nOnce the platform successfully launched, the compiled web application is accessible under *http://localhost:8080/obix/client/backbones/index.html*\r\nThe Osgi console is reachable at *http://localhost:8080/system/console*\r\n\r\nIf you need to fine tune the launching setup, you can modify the configuration of maven-pax-plugin according to the documention of [Pax Runner](https://ops4j1.jira.com/wiki/display/paxrunner/Pax+Runner)\r\n\r\n### Develop / debug\r\nIf you want to modify the web application and see immediate results without having to do a full recompile, the source folder (com.ptoceti.osgi.obix.backbones/src/main/webapp) is available under *http://localhost:8080/obix/dev/backbones*\r\nFor remote java remote debuging, the port 5005 is available. \r\n\r\n##License\r\nCode released under the [Apache licence]( http://www.apache.org/licenses/)\r\n\r\n\r\n\r\n\r\n","google":"<script>   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-51919257-1', 'lathil.github.io');   ga('send', 'pageview');  </script>","note":"Don't delete this file! It's used internally to help with page regeneration."}